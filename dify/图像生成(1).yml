app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: ÂõæÂÉèÁîüÊàê
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/siliconflow:0.0.15@775950e2071600bd3ba0415ec306c1b1582bc4a2a94688d642f627d112d87cd3
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: http-request
      id: 1750565543008-source-1750565558650-target
      source: '1750565543008'
      sourceHandle: source
      target: '1750565558650'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: parameter-extractor
      id: 1750565558650-source-1750565563911-target
      source: '1750565558650'
      sourceHandle: source
      target: '1750565563911'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: parameter-extractor
        targetType: code
      id: 1750565563911-source-1750565578028-target
      source: '1750565563911'
      sourceHandle: source
      target: '1750565578028'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1750565578028-source-1750565587635-target
      source: '1750565578028'
      sourceHandle: source
      target: '1750565587635'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: ÂºÄÂßã
        type: start
        variables:
        - label: ÂõæÁâáÊèèËø∞‰ø°ÊÅØ
          max_length: 1024
          options: []
          required: true
          type: paragraph
          variable: img
      height: 89
      id: '1750565543008'
      position:
        x: 78
        y: 281
      positionAbsolute:
        x: 78
        y: 281
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data:
          - id: key-value-3093
            key: ''
            type: text
            value: "{\n  \"model\": \"Kwai-Kolors/Kolors\",\n  \"prompt\": \"{{#1750565543008.img#}}\"\
              ,\n  \"image_size\": \"1024x1024\",\n  \"batch_size\": 1,\n  \"seed\"\
              : 4999999999,\n  \"num_inference_steps\": 20,\n  \"guidance_scale\"\
              : 7.5\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer sk-nizlirnfpejhlhtmiehohqkvrpmsaoakgxvxgxharkugqwre

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP ËØ∑Ê±Ç
        type: http-request
        url: https://api.siliconflow.cn/v1/images/generations
        variables: []
      height: 139
      id: '1750565558650'
      position:
        x: 378
        y: 237
      positionAbsolute:
        x: 378
        y: 237
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: Pro/deepseek-ai/DeepSeek-V3
          provider: langgenius/siliconflow/siliconflow
        parameters:
        - description: ÂõæÁâá
          name: image
          required: false
          type: string
        query:
        - '1750565558650'
        - body
        reasoning_mode: prompt
        selected: false
        title: ÂèÇÊï∞ÊèêÂèñÂô®
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1750565563911'
      position:
        x: 655
        y: 184
      positionAbsolute:
        x: 655
        y: 184
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from typing import Any,Union\ndef main(data: Any) -> str:\n    def\
          \ extract_url(value:Union[dict,list,str])->str:\n        if isinstance(value,str):\n\
          \            return value if value.startswith(('http://','https://','data.image'))\
          \ else ''\n        if isinstance(value,dict):\n            for field in\
          \ ['url','image','link','src']:\n                if field in value:\n  \
          \                  found=extract_url(value[field])\n                   \
          \ if found:return found\n            for list_field in ['urls','images','links','sources']:\n\
          \                if isinstance(value.get(list_field),list):\n          \
          \          found=extract_url(value[list_field])\n                    if\
          \ found:return found\n            for v in value.values():\n           \
          \     found=extract_url(v)\n                if found:return found\n    \
          \    if isinstance(value,list):\n            for item in value:\n      \
          \          found=extract_url(item)\n                if found:return found\n\
          \        return ''\n    return {\"result\":extract_url(data)}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ‰ª£Á†ÅÊâßË°å
        type: code
        variables:
        - value_selector:
          - '1750565563911'
          - image
          variable: data
      height: 53
      id: '1750565578028'
      position:
        x: 993
        y: 281
      positionAbsolute:
        x: 993
        y: 281
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1750565578028'
          - result
          variable: result
        selected: false
        title: ÁªìÊùü
        type: end
      height: 89
      id: '1750565587635'
      position:
        x: 1462
        y: 254
      positionAbsolute:
        x: 1462
        y: 254
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 184.09753955386464
      y: 283.70852373231867
      zoom: 0.49999999999999994
